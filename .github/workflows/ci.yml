name: ci

on:
  push:
    branches:
      - main

env:
  NODE_VERSION: '16.17.0'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.NODE_VERSION }}
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        run: npm ci
      - name: Prettier
        run: npm run prettier:check
      - name: Build app
        run: npm run build
#      - name: Inject slug/short variables
#        uses: rlespinasse/github-slug-action@v4
#      - name: Upload artifact
#        uses: actions/upload-artifact@v3
#        if: ${{ success() }}
#        with:
#          name: smarlhens-probot-app-empower-npm-repos-${{ env.GITHUB_REF_SLUG }}-${{ env.GITHUB_SHA_SHORT }}
#          path: |
#            .env.dist
#            docker-compose.prod.yml

#  build-image:
#    runs-on: ubuntu-22.04
#    steps:
#      - name: Checkout source code
#        uses: actions/checkout@v3
#      - name: Docker meta
#        id: meta
#        uses: docker/metadata-action@v4
#        with:
#          images: |
#            ghcr.io/smarlhens/probot-app-empower-npm-repos
#          tags: |
#            type=ref,event=branch
#            type=semver,pattern={{version}}
#            type=semver,pattern={{major}}.{{minor}}
#            type=semver,pattern={{major}}
#            type=sha
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#      - name: Login to GitHub Container Registry
#        uses: docker/login-action@v2
#        with:
#          registry: ghcr.io
#          username: ${{ github.repository_owner }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#      - name: Build app and push
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          push: true
#          network: host
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
#          cache-from: type=registry,ref=ghcr.io/smarlhens/probot-app-empower-npm-repos:buildcache
#          cache-to: type=registry,ref=ghcr.io/smarlhens/probot-app-empower-npm-repos:buildcache,mode=max
#
#  deploy:
#    runs-on: ubuntu-latest
#    needs: [build, build-image]
#    steps:
#      - name: Inject slug/short variables
#        uses: rlespinasse/github-slug-action@v4
#      - name: Download artifact
#        uses: actions/download-artifact@v3
#        with:
#          name: smarlhens-probot-app-empower-npm-repos-${{ env.GITHUB_REF_SLUG }}-${{ env.GITHUB_SHA_SHORT }}
#          path: '.'
#      - name: Deploy to server
#        uses: easingthemes/ssh-deploy@v4.1.8
#        env:
#          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
#          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
#          REMOTE_USER: ${{ secrets.REMOTE_USER }}
#          REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
#          SOURCE: '.'
#          TARGET: ${{ secrets.REMOTE_TARGET }}
#      - name: Docker build containers
#        uses: appleboy/ssh-action@v0.1.8
#        env:
#          TARGET: ${{ secrets.REMOTE_TARGET }}
#          PAT: ${{ secrets.PAT }}
#        with:
#          host: ${{ secrets.REMOTE_HOST }}
#          username: ${{ secrets.REMOTE_USER }}
#          key: ${{ secrets.SERVER_SSH_KEY }}
#          port: ${{ secrets.REMOTE_PORT }}
#          envs: TARGET,PAT
#          script_stop: true
#          script: |
#            cd $TARGET
#            docker login ghcr.io -u smarlhens -p $PAT
#            docker-compose -f docker-compose.prod.yml pull
#            docker-compose -f docker-compose.prod.yml up -d --build --no-deps
#            docker logout ghcr.io
